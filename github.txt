** Create a New GitHub Repository:

* 1. Initialize a New Repository:

- Open your command line terminal.
- Navigate to the directory where you want to create your new repository or project.
- Run the following commands to initialize a new Git repository and create a README file:

git init
echo "# Your-Repository-Name" >> README.md

* 2. Add and Commit the README:

- Add the README.md file to the staging area and commit it:

git add README.md
git commit -m "Initial commit"

* - Create a New Repository on GitHub:

- Go to GitHub in your web browser.
- Log in to your GitHub account or sign up if you don't have one.
- Click the '+' icon in the upper-right corner and select "New repository."
- Fill in the repository name, optional description, and other settings.
- Click the "Create repository" button.

* 3. Link Your Local Repository to GitHub:

T- o link your local repository to the newly created GitHub repository, use the following command:

git remote add origin <repository_url>
Replace <repository_url> with the URL of your GitHub repository.

* 4. Push Your Code to GitHub:

- Push your local repository to GitHub:

git branch -M main  # This renames your default branch to 'main' if it's not already named.
git push -u origin main

* 5. Verify on GitHub:

- Visit your GitHub repository's page in a web browser to ensure that your code has been pushed successfully.

* 6. Push to an Existing GitHub Repository:



** Link Your Local Repository to an Existing GitHub Repository:

* 1. Use the following command to link your local repository to an existing GitHub repository:

git remote add origin <repository_url>
Replace <repository_url> with the URL of the existing GitHub repository.

* 2. Set Your Default Branch Name (if necessary):

- If the default branch in your local repository is not named "main," you may need to rename it to match the GitHub repository's default branch name:

git branch -M main

* 3. Push Your Local Changes to GitHub:

- Push your local changes to the existing GitHub repository:

git push -u origin main
Verify on GitHub:

* 4. Visit the existing GitHub repository's page in a web browser to ensure that your code has been pushed successfully.